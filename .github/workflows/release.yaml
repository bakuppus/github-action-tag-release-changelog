name: 'release'
on:
  push:
    tags:
      - 'v*'

jobs:
  versioning:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Git Semantic Version
        id: version
        uses: PaulHatch/semantic-version@v4.0.1
        with:
          # The prefix to use to identify tags
          tag_prefix: "v"
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: "(MAJOR)"
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: "(MINOR)"
          # A string to determine the format of the version output
          format: "${major}.${minor}.${patch}-rc${increment}"
          # Optional path to check for changes. If any changes are detected in the path the
          # 'changed' output will true. Enter multiple paths separated by spaces.
          #change_path: "src/my-service"
          # Named version, will be used as suffix for name version tag
          #namespace: qa
          # Indicate whether short tags like 'v1' should be supported. If false only full
          # tags like 'v1.0.0' will be recognized.
          #short_tags: true
          # If this is set to true, *every* commit will be treated as a new version.
          bump_each_commit: true

  changelog:
    needs: versioning
    name: "Changelog"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
        name: Check out code
        with:
          fetch-depth: 0
      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v1
        with:
          configuration: ".github/workflows/configuration.json"
          toTag: ${{ needs.versioning.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        uses: actions/create-release@v1
        with:
          prerelease: true
          tag_name: ${{ needs.versioning.outputs.version }}
          release_name: ${{ needs.versioning.outputs.version }}
          body: ${{steps.github_release.outputs.changelog}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}